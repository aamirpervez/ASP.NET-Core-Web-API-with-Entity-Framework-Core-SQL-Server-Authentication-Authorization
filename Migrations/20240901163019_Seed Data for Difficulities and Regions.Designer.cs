// <auto-generated />
using System;
using ExploreAPIs.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExploreAPIs.API.Migrations
{
    [DbContext(typeof(ExploreAPIsDbContext))]
    [Migration("20240901163019_Seed Data for Difficulities and Regions")]
    partial class SeedDataforDifficulitiesandRegions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExploreAPIs.API.Modals.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("66c35d15-6073-41af-aef2-9f0e9e568483"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("cff873cd-312b-4f69-a8ca-dfbf1f3b1107"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("2fdfee01-7e11-465b-af07-566fb4d9996e"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("ExploreAPIs.API.Modals.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d61f51dd-6c63-42d8-939c-659e43149bde"),
                            Code = "NY",
                            Name = "New York",
                            RegionImgUrl = "New York Pic.png"
                        },
                        new
                        {
                            Id = new Guid("1d67382d-a7a9-4cfa-ab26-911c2d6ff6cc"),
                            Code = "CH",
                            Name = "Chicago",
                            RegionImgUrl = "Chicago Pic.png"
                        },
                        new
                        {
                            Id = new Guid("384ddf4b-ce21-4858-b428-df09ca54181d"),
                            Code = "HO",
                            Name = "Houston",
                            RegionImgUrl = "Houston Pic.png"
                        });
                });

            modelBuilder.Entity("ExploreAPIs.API.Modals.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("ExploreAPIs.API.Modals.Domain.Walk", b =>
                {
                    b.HasOne("ExploreAPIs.API.Modals.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExploreAPIs.API.Modals.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
